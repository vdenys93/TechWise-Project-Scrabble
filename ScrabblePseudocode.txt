**Objects**

board
	2d array player tiles
	2d array board tiles and modifiers
		First letter D or T for double, triple
		second letter L or W for letter or word 
		a return of 'DW' means double the word
		all other indexes blank text
		getboard returns the board of tiles as a 2d array
			15x15
player
	player number
	tile array --tiles available
	score int --total points returned by finishword
	int turnCount
	int turnsSinceLastPlacement

Tilebag
	tile list
	TileCount()
	Fill()
		shuffle()
	return_tile()
		receive tiles
		pick 4 to return
		shuffle after()
		shuffle()

tile
	int points
	chr letter

**Functions**

PlaceTile()
	if blank then "enter letter"
  	stores currently placed tiles until finish word called
	get_stored_tiles()

submitWord(board) return score from placement --submit word and return score if valid
		if
			list tiles
			isWordValid()
			return 'total of tile scores'

calculate_word_score(board, tiles)

Challenge()
	isWordValid(board)
   		if first turn, must be cover center tile
    	does word connect with other words
			dictionary.checkword() --check intersecting words too


dictionary()
	dictionary type of words
	checkWord()


Discard()
	pick tiles
  send to tilePool.return_tile()
	return received tiles back to player()


setup_pre_game()


in_game_setup
	pick player count
	tilebag fill and shuffle
	distribute 7 tiles to each player
	random assignment of player number

turnloop()
	turncount
	while placement not valid or pass is null

	player turn begins
  	prompt player
    	option to place tiles with submit button or discard or pass

	if placed tiles submitted
		player.score(submitword())

  next player

  Controller()
	board board
	list players--number determined by input
	Tilebag 
	last_words--somewhere
	timer--somewhere
	sumPoints()
	PlaceTile()
	submitword(placetile, board)
	Challenge()
	Discard()



**Main**
        setup pre-game()
        display the board
        ingamesetup

        turnloop()


undecided location methods
	game timer --stretch
